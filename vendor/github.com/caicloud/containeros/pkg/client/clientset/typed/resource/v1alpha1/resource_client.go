/*
Copyright 2020 bytedance authors. All rights reserved.
*/

// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/caicloud/containeros/pkg/apis/resource/v1alpha1"
	"github.com/caicloud/containeros/pkg/client/clientset/scheme"
	rest "k8s.io/client-go/rest"
)

type ResourceV1alpha1Interface interface {
	RESTClient() rest.Interface
	BaremetalClustersGetter
	BaremetalMachinesGetter
	ClustersGetter
	ClusterInfosGetter
	HorizontalNodeAutoscalersGetter
	MachinesGetter
	MachineHealthChecksGetter
	MachineInfosGetter
	MachineSetsGetter
	NodeAutoscalerConfigurationsGetter
	NodeClaimsGetter
	StorageServicesGetter
	StorageTypesGetter
}

// ResourceV1alpha1Client is used to interact with features provided by the resource.containeros.dev group.
type ResourceV1alpha1Client struct {
	restClient rest.Interface
}

func (c *ResourceV1alpha1Client) BaremetalClusters() BaremetalClusterInterface {
	return newBaremetalClusters(c)
}

func (c *ResourceV1alpha1Client) BaremetalMachines() BaremetalMachineInterface {
	return newBaremetalMachines(c)
}

func (c *ResourceV1alpha1Client) Clusters() ClusterInterface {
	return newClusters(c)
}

func (c *ResourceV1alpha1Client) ClusterInfos() ClusterInfoInterface {
	return newClusterInfos(c)
}

func (c *ResourceV1alpha1Client) HorizontalNodeAutoscalers() HorizontalNodeAutoscalerInterface {
	return newHorizontalNodeAutoscalers(c)
}

func (c *ResourceV1alpha1Client) Machines() MachineInterface {
	return newMachines(c)
}

func (c *ResourceV1alpha1Client) MachineHealthChecks() MachineHealthCheckInterface {
	return newMachineHealthChecks(c)
}

func (c *ResourceV1alpha1Client) MachineInfos() MachineInfoInterface {
	return newMachineInfos(c)
}

func (c *ResourceV1alpha1Client) MachineSets() MachineSetInterface {
	return newMachineSets(c)
}

func (c *ResourceV1alpha1Client) NodeAutoscalerConfigurations() NodeAutoscalerConfigurationInterface {
	return newNodeAutoscalerConfigurations(c)
}

func (c *ResourceV1alpha1Client) NodeClaims() NodeClaimInterface {
	return newNodeClaims(c)
}

func (c *ResourceV1alpha1Client) StorageServices() StorageServiceInterface {
	return newStorageServices(c)
}

func (c *ResourceV1alpha1Client) StorageTypes() StorageTypeInterface {
	return newStorageTypes(c)
}

// NewForConfig creates a new ResourceV1alpha1Client for the given config.
func NewForConfig(c *rest.Config) (*ResourceV1alpha1Client, error) {
	config := *c
	if err := setConfigDefaults(&config); err != nil {
		return nil, err
	}
	client, err := rest.RESTClientFor(&config)
	if err != nil {
		return nil, err
	}
	return &ResourceV1alpha1Client{client}, nil
}

// NewForConfigOrDie creates a new ResourceV1alpha1Client for the given config and
// panics if there is an error in the config.
func NewForConfigOrDie(c *rest.Config) *ResourceV1alpha1Client {
	client, err := NewForConfig(c)
	if err != nil {
		panic(err)
	}
	return client
}

// New creates a new ResourceV1alpha1Client for the given RESTClient.
func New(c rest.Interface) *ResourceV1alpha1Client {
	return &ResourceV1alpha1Client{c}
}

func setConfigDefaults(config *rest.Config) error {
	gv := v1alpha1.SchemeGroupVersion
	config.GroupVersion = &gv
	config.APIPath = "/apis"
	config.NegotiatedSerializer = scheme.Codecs.WithoutConversion()

	if config.UserAgent == "" {
		config.UserAgent = rest.DefaultKubernetesUserAgent()
	}

	return nil
}

// RESTClient returns a RESTClient that is used to communicate
// with API server by this client implementation.
func (c *ResourceV1alpha1Client) RESTClient() rest.Interface {
	if c == nil {
		return nil
	}
	return c.restClient
}
